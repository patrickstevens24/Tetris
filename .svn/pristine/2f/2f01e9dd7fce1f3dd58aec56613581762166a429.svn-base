package view;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.RenderingHints;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.Observable;
import java.util.Observer;
import java.util.Random;

import javax.swing.JPanel;

import model.Block;
import model.Board;

/**
 * 
 * @author Patrick Stevens
 * @version 1.0
 *
 */
public class BoardPanel extends JPanel implements Observer {
    /**
     * 
     */
    private static final long serialVersionUID = 7784901084261352281L;
    /**
     * 
     */
    private static final int BOARD_HEIGHT = 19;
    /**
     * 
     */
    private static final int BOARD_WIDTH = 9;
    /**
     * 
     */
    private List<?> myBlock;


    /**
     * 
     */
    public BoardPanel() {
        
        super();
        setBackground(Color.BLACK);
        
        myBlock = new ArrayList<>();
        
        final Board board = new Board();
        board.addObserver(this);
        setVisible(true);
        
        
    }
    /**
     * 
     */
    @Override
    public void paintComponent(final Graphics theGraphics) {
        super.paintComponent(theGraphics);
        final Graphics2D g2d = (Graphics2D) theGraphics;
        
        g2d.setRenderingHint(RenderingHints.KEY_ANTIALIASING,
                             RenderingHints.VALUE_ANTIALIAS_ON);
        final Iterator<?> itr = myBlock.iterator();
        final Random random = new Random();
        final int red = random.nextInt(256);
        final int green = random.nextInt(256);
        final int blue = random.nextInt(256);
        
        
        
        final int location = getWidth() / 10;
        for (int i = BOARD_HEIGHT; i >= 0; i--) {
            final Block[] row = (Block[]) itr.next();
            
            for (int a = BOARD_WIDTH; a >= 0; a--) {
                if (row[a] != null) {

                    final Color randomColor = new Color(red, green, blue);
                    
                    g2d.setPaint(randomColor);

                    g2d.fill3DRect(a * location + 1, i * location 
                                   + 1, location - 1, location - 1, true);
                    g2d.setPaint(Color.BLACK);
                }
            }  
        }
    }
    /**
     * 
     */
    @Override
    public void update(final Observable theBoard, final Object theObject) {
        if (theBoard instanceof Board) {
            if (theObject instanceof List<?>) {
                myBlock = (List<?>) theObject;
                repaint();
            }
        }
    }
}
